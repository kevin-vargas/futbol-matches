---
apiVersion: v1
kind: Namespace
metadata:
  name: tacs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-futbol-matches
  namespace: tacs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-futbol-matches
  template:
    metadata:
      labels:
        app: api-futbol-matches
    spec:
      containers:
        - name: app
          image: docker.fast.ar/be-futbol-matches:latest
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 250Mi
            requests:
              cpu: 200m
              memory: 125Mi
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: api-futbol-matches-service
  namespace: tacs
spec:
  selector:
    app: api-futbol-matches
  ports:
    - port: 8000
      targetPort: 8080
  sessionAffinity: ClientIP
  type: LoadBalancer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: api-futbol-matches
  namespace: tacs
spec:
  secretName: api-futbol-matches-fast-ar-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - api.futbol.fast.ar
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: api-registry-ingress-secure
  namespace: tacs
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`api.futbol.fast.ar`)
    kind: Rule
    services:
    - name: api-futbol-matches-service
      port: 8000
  tls:
    secretName: api-futbol-matches-fast-ar-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: api-registry-ingress
  namespace: tacs
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`api.futbol.fast.ar`)
    kind: Rule
    services:
    - name: api-futbol-matches-service
      port: 8000
    middlewares:
    - name: https-redirect
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: https-redirect
  namespace: tacs
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-api-futbol-matches
  namespace: tacs
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-futbol-matches
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: v1
kind: Service
metadata:
  name: front-futbol-matches-service
  namespace: tacs
spec:
  selector:
    app: front-futbol-matches
  ports:
    - port: 80
      targetPort: 80
  sessionAffinity: ClientIP
  type: LoadBalancer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: front-futbol-matches
  namespace: tacs
spec:
  secretName: front-futbol-matches-fast-ar-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - futbol.fast.ar
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: front-registry-ingress-secure
  namespace: tacs
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`futbol.fast.ar`)
    kind: Rule
    services:
    - name: front-futbol-matches-service
      port: 80
  tls:
    secretName: front-futbol-matches-fast-ar-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: front-registry-ingress
  namespace: tacs
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`futbol.fast.ar`)
    kind: Rule
    services:
    - name: front-futbol-matches-service
      port: 80
    middlewares:
    - name: https-redirect
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: front-pv-volume
  namespace: tacs
spec:
  storageClassName: local-storage
  capacity:
    storage: 50M
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/temp/front-futbol-matches"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: front-pv-claim
  namespace: tacs
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50M
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-futbol-matches
  namespace: tacs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-futbol-matches
  template:
    metadata:
      labels:
        app: front-futbol-matches
    spec:
      containers:
        - name: front-futbol-matches
          image: httpd:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: "/usr/local/apache2/htdocs"
              name: front-storage
      volumes:
        - name: front-storage
          persistentVolumeClaim:
            claimName: front-pv-claim
---
apiVersion: batch/v1
kind: Job
metadata:
  name: front-job
  namespace: tacs
spec:
  template:
    metadata:
      name: front-job
    spec:
      containers:
      - name: front
        image: docker.fast.ar/front-futbol-matches
        command:
        - "bin/sh"
        - "-c"
        - "mkdir -p foo; mv ./dist/* ./out"
        volumeMounts:
          - mountPath: "/out"
            name: front-storage
      volumes:
        - name: front-storage
          persistentVolumeClaim:
            claimName: front-pv-claim
      restartPolicy: Never
      imagePullSecrets:
        - name: regcred
  backoffLimit: 0
